#version 400 core

in vec4 clipSpace;
in vec2 textureCoords;

out vec4 out_Color;

uniform sampler2D refractionTexture;
uniform sampler2D reflectionTexture;
uniform sampler2D dudvMap;
uniform float moveFactor;

const float distStrength = 0.0085;

void main(void) {

	vec2 NDC = (clipSpace.xy/clipSpace.w)/2.0 + 0.5;
	vec2 reflectTextureCoords = vec2(NDC.x, -NDC.y);
	vec2 refractTextureCoords = vec2(NDC.x, NDC.y);
	
	vec2 distortion1 = distStrength * (texture(dudvMap, vec2(textureCoords.x + moveFactor, textureCoords.y)).rg * 2.0 - 1.0);
	vec2 distortion2 = distStrength * (texture(dudvMap, vec2(-textureCoords.x + moveFactor, textureCoords.y + moveFactor)).rg * 2.0 - 1.0);
	vec2 totalDistortion = distortion1 + distortion2;
	reflectTextureCoords += totalDistortion;
	refractTextureCoords += totalDistortion;
	reflectTextureCoords.x = clamp(reflectTextureCoords.x, 0.001, 0.999);
	reflectTextureCoords.y = clamp(reflectTextureCoords.y, -0.999, -0.001);
	refractTextureCoords = clamp(refractTextureCoords, 0.001, 0.999);
	
	vec4 reflectColor = texture(reflectionTexture, reflectTextureCoords);
	vec4 refractColor = texture(refractionTexture, refractTextureCoords);

	out_Color = mix(reflectColor, refractColor, 0.5);
	out_Color = mix(out_Color, vec4(0.0, 0.3, 0.5, 1.0), 0.2);
}